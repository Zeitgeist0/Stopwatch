{"version":3,"sources":["Components/TimeDisplay/TimeDisplay.jsx","Components/Buttons/Buttons.jsx","App.js","index.js"],"names":["TimeDisplay","time","className","Math","floor","slice","Buttons","start","stop","wait","reset","onClick","App","useState","setTime","timerOn","setTimerOn","useEffect","subject","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","clicks","timeout","setTimeout","clearTimeout","handleWait","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAEe,SAASA,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OACE,sBAAKC,UAAU,iBAAf,UACE,sBAAMA,UAAU,eAAhB,UACI,IAAMC,KAAKC,MAAOH,EAAI,KAAgB,KAAKI,OAAO,KAFxD,YAKE,sBAAMH,UAAU,eAAhB,UACI,IAAOC,KAAKC,MAAMH,EAAO,IAAM,IAAKI,OAAO,KANjD,YASE,sBAAMH,UAAU,eAAhB,UACI,IAAMC,KAAKC,MAAMH,EAAO,KAAKI,OAAO,Q,MCZ/B,SAASC,EAAT,GAAgD,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACnD,OACE,sBAAKR,UAAU,oBAAf,UACE,wBAAQA,UAAU,mBAAmBS,QAASJ,EAA9C,mBAGA,wBAAQL,UAAU,mBAAmBS,QAASH,EAA9C,kBAGA,wBAAQN,UAAU,mBAAmBS,QAASF,EAA9C,kBAGA,wBAAQP,UAAU,mBAAmBS,QAASD,EAA9C,sBCiESE,MAzEf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAqDA,OAnDAC,qBAAU,WACR,IAAMC,EAAU,IAAIC,IAQpB,OAPAC,YAAS,KACNC,KAAKC,YAAUJ,IACfK,WAAU,WACLR,GACFD,GAAQ,SAACU,GAAD,OAASA,EAAM,QAGtB,WACLN,EAAQO,OACRP,EAAQQ,cAET,CAACX,IAuCF,mCACE,qBAAKb,UAAU,YAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,oBAAIA,UAAU,mBAAd,uBACA,cAACF,EAAD,CAAaC,KAAMA,IACnB,cAACK,EAAD,CACEC,MA3CU,WAClBS,GAAW,IA2CHR,KAxCS,WACjBM,EAAQ,GACRE,GAAW,IAuCHP,KApCS,WACjB,IAAIkB,EAAS,EACTC,EAAU,GACd,IAAgB,IAAZb,EAGJ,OAAO,WAGU,MAFfY,EAGEC,EAAUC,YAAW,WACnBb,GAAW,GACXW,EAAS,IACR,MAEHG,aAAaF,GACbZ,GAAW,GACXW,EAAS,IAmBCI,GACNrB,MAfU,WAClBI,EAAQ,GACRE,GAAW,cCrDfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6a8344da.chunk.js","sourcesContent":["import \"./timedisplay.scss\";\r\n\r\nexport default function TimeDisplay({ time }) {\r\n  return (\r\n    <div className=\"time-container\">\r\n      <span className=\"time-display\">\r\n        {(\"0\" + Math.floor((time / (60 * 60)) % 24)).slice(-2)}\r\n      </span>\r\n      &nbsp;:&nbsp;\r\n      <span className=\"time-display\">\r\n        {(\"0\" + (Math.floor(time / 60) % 60)).slice(-2)}\r\n      </span>\r\n      &nbsp;:&nbsp;\r\n      <span className=\"time-display\">\r\n        {(\"0\" + Math.floor(time % 60)).slice(-2)}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import \"./buttons.scss\";\r\n\r\nexport default function Buttons({ start, stop, wait, reset }) {\r\n  return (\r\n    <div className=\"buttons-container\">\r\n      <button className=\"stopwatch-button\" onClick={start}>\r\n        Start\r\n      </button>\r\n      <button className=\"stopwatch-button\" onClick={stop}>\r\n        Stop\r\n      </button>\r\n      <button className=\"stopwatch-button\" onClick={wait}>\r\n        Wait\r\n      </button>\r\n      <button className=\"stopwatch-button\" onClick={reset}>\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { interval, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport TimeDisplay from \"./Components/TimeDisplay/TimeDisplay.jsx\";\nimport Buttons from \"./Components/Buttons/Buttons.jsx\";\nfunction App() {\n  const [time, setTime] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n\n  useEffect(() => {\n    const subject = new Subject();\n    interval(1000)\n      .pipe(takeUntil(subject))\n      .subscribe(() => {\n        if (timerOn) {\n          setTime((val) => val + 1);\n        }\n      });\n    return () => {\n      subject.next();\n      subject.complete();\n    };\n  }, [timerOn]);\n\n  const handleStart = () => {\n    setTimerOn(true);\n  };\n\n  const handleStop = () => {\n    setTime(0);\n    setTimerOn(false);\n  };\n\n  const handleWait = function () {\n    let clicks = 0;\n    let timeout = \"\";\n    if (timerOn === false) {\n      return;\n    }\n    return function () {\n      clicks++;\n\n      if (clicks === 1) {\n        timeout = setTimeout(function () {\n          setTimerOn(true);\n          clicks = 0;\n        }, 300);\n      } else {\n        clearTimeout(timeout);\n        setTimerOn(false);\n        clicks = 0;\n      }\n    };\n  };\n\n  const handleReset = () => {\n    setTime(0);\n    setTimerOn(true);\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"stopwatch-container\">\n          <h1 className=\"stopwatch-header\">Stopwatch</h1>\n          <TimeDisplay time={time} />\n          <Buttons\n            start={handleStart}\n            stop={handleStop}\n            wait={handleWait()}\n            reset={handleReset}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}